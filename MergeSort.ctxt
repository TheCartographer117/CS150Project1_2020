#BlueJ class context
comment0.target=MergeSort
comment0.text=\r\n\ An\ Implement\ of\ MergeSort\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=a
comment1.target=void\ sort(int[])
comment1.text=\r\n\ Sort\ an\ array\ of\ ints\ using\ merge\ sort.\ Overides\ interface\ method\r\n\r\n\ @param\ \ \ a\ \ \ an\ array\ of\ ints\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ Return\ the\ method\ of\ sorting.\ \r\n\r\n\ @return\ the\ method\ of\ sorting\r\n
comment2.params=a\ start\ end
comment2.target=void\ sort(int[],\ int,\ int)
comment2.text=\r\n\ Sort\ an\ array\ of\ ints\ using\ merge\ sort.\ \r\n\r\n\ @param\ \ \ a\ \ \ an\ array\ of\ ints\r\n\ @param\ \ \ start\ \ \ the\ start\ of\ the\ array\ being\ sorted\r\n\ @param\ \ \ end\ the\ end\ of\ the\ array\ being\ sorted\r\n
comment3.params=a\ start\ half\ end
comment3.target=void\ merge(int[],\ int,\ int,\ int)
comment3.text=\r\n\ Called\ by\ int\ sort\ to\ merge\ sorted\ components\r\n\ \r\n\ @param\ \ \ a\ \ \ an\ array\ of\ comparable\ objects\r\n\ @param\ \ \ start\ \ \ the\ start\ of\ the\ array\ being\ sorted\r\n\ @param\ \ \ end\ the\ end\ of\ the\ array\ being\ sorted\r\n
comment4.params=a
comment4.target=void\ sort(java.lang.Comparable[])
comment4.text=\r\n\ Sort\ an\ array\ of\ comparable\ objects\ using\ merge\ sort.\ Overides\ interface\ method.\r\n\r\n\ @param\ \ \ a\ \ \ an\ array\ of\ ints\r\n
comment5.params=a\ start\ end
comment5.target=void\ sort(java.lang.Comparable[],\ int,\ int)
comment5.text=\r\n\ Sort\ an\ array\ of\ comparable\ objects\ using\ merge\ sort.\ \r\n\r\n\ @param\ \ \ a\ \ \ an\ array\ of\ comparable\ objects\r\n\ @param\ \ \ start\ \ \ the\ start\ of\ the\ array\ being\ sorted\r\n\ @param\ \ \ end\ the\ end\ of\ the\ array\ being\ sorted\r\n
comment6.params=a\ start\ half\ end
comment6.target=void\ merge(java.lang.Comparable[],\ int,\ int,\ int)
comment6.text=\r\n\ Called\ by\ sort\ to\ merge\ sorted\ components\ (comparable\ objects)\r\n\ \r\n\ @param\ \ \ a\ \ \ an\ array\ of\ comparable\ objects\r\n\ @param\ \ \ start\ \ \ the\ start\ of\ the\ array\ being\ sorted\r\n\ @param\ \ \ end\ the\ end\ of\ the\ array\ being\ sortedd\ \r\n
comment7.params=a\ c
comment7.target=void\ sort(java.lang.Object[],\ java.util.Comparator)
comment8.params=a\ start\ end\ c
comment8.target=void\ sort(java.lang.Object[],\ int,\ int,\ java.util.Comparator)
comment8.text=\r\n\ Sort\ an\ array\ of\ comparable\ objects\ using\ merge\ sort.\ \r\n\r\n\ @param\ \ \ a\ \ \ an\ array\ of\ comparable\ objects\r\n\ @param\ \ \ start\ \ \ the\ start\ of\ the\ array\ being\ sorted\r\n\ @param\ \ \ end\ the\ end\ of\ the\ array\ being\ sorted\r\n
comment9.params=a\ start\ half\ end\ c
comment9.target=void\ merge(java.lang.Object[],\ int,\ int,\ int,\ java.util.Comparator)
comment9.text=\r\n\ Called\ by\ sort\ to\ merge\ sorted\ components\ (comparable\ objects)\r\n\ \r\n\ @param\ \ \ a\ \ \ an\ array\ of\ comparable\ objects\r\n\ @param\ \ \ start\ \ \ the\ start\ of\ the\ array\ being\ sorted\r\n\ @param\ \ \ end\ the\ end\ of\ the\ array\ being\ sortedd\ \r\n
numComments=11
